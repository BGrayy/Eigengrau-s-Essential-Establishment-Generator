:: TownOutput
<<set _town to $town>>
<<button "Edit $town.name">><<run setup.history($town, null, "Editing town")>><<goto "TownEdit">><</button>>

<<print lib.firstCharacter($town.name)>> is located in the $town.terrain $town.location, where the vegetation is $town.vegetation. $town.name grew around $town.origin. They harvest $town.primaryCrop, and nearby is a region rich with $town.primaryExport.
\<<set _politicalIdeologyDescription to "tip">><<run setup.politicsTooltip(_politicalIdeologyDescription, "politicalIdeology", $town)>>
\<<set _economicIdeologyDescription to "tip2">><<run setup.politicsTooltip(_economicIdeologyDescription, "economicIdeology", $town)>>
\<<set _politicalSourceDescription to "tip3">><<run setup.politicsTooltip(_politicalSourceDescription, "politicalSource", $town)>>
They are <<print setup.articles.find($town.equality)>> <<print lib.createTippyFull($town.equalityDescription, $town.equality)>> <span @id="_economicIdeologyDescription" class="tip dotted">$town.economicIdeologyIST</span> <span @id="_politicalIdeologyDescription" class="tip dotted">$town.politicalIdeologyIC</span> <span @id="_politicalSourceDescription" class="tip dotted">$town.politicalSource</span>. The nearest <<include "TownLandmarkRandomizer">> A population of $town.population, the denizens live <<print setup.articles.output($town.wealth)>> existence. <<print $town.currentEvent.toUpperFirst()>> is currently taking place.
<h3>Government in $town.name</h3>$town.economicIdeologyDescription $town.politicalSourceDescription
<h4>Economics</h4>$town.economics $town.welfare <h4>Law and Order</h4>$town.military $town.law $town.arcana
<h3>Factions</h3><<silently>>
    <<set _listbox to '<<listbox "$newFaction">>'>>
    <<for _key range Object.keys(lib.factionData.type)>>
        <<set _listbox += '<<option "' + _key + '" "' + _key + '">>'>>
    <</for>>
    <<set _listbox += '<</listbox>>'>>
<</silently>>\
_listbox -- <<button "Create new faction">>
  <<run console.log('Creating a new ' + $newFaction)>>
  <<set _tempFaction to setup.createFaction($town, {
  type: $newFaction
  })>>
  <<set $town.factions[_tempFaction.key] = _tempFaction>>
  <<run console.log($town)>>
  <<goto "TownOutput">>
<</button>>
<<unset $currentPassage>>

<div class='classTable'><<nobr>><table>
    <tr>
        <th>Name</th>
        <th>Type</th>
        <th>Size</th>
        <th>Delete</th>
        /* <th>Raw Number</th> */
    </tr>
<<for _key, _faction range $town.factions>><<capture _key, _faction>>
  <tr>
    <td><<profile _faction>></td>
    <td><<print _faction.type.toUpperFirst()>> <<print _faction.wordNoun.toUpperFirst()>></td>
    <td><<print lib.toTitleCase(_faction.size)>></td>
    <td><<link "x">><<set $deleted to setup.deleteFaction($town, _key)>><<goto "TownOutput">><<notify 5000>>Deleted $deleted.name<</notify>><</link>></td>
  </tr>
 /* - A _faction.size _faction.type _faction.wordNoun */
<</capture>><</for>></table><</nobr>></div>

<h3>List of NPCs</h3><<nobr>>
<table>
  <tr>
    <th>Name</th>
    <th>Race</th>
    <th>Profession</th>
    <th>Delete</th>
  </tr>
  <<for _i, _npc range $npcs>><<capture _i, _npc>><<set _profession to lib.toTitleCase(_npc.profession)>><<if !_npc.isThrowaway>>
  <tr><td><<profile $npcs[_npc.key]>></td>
  <td><<print _npc.race.toUpperFirst()>></td>
  <td><<tooltip _profession lib.professions[_npc.profession].description.toUpperFirst()>></td>
  <td><<link "x">><<set _deleted to $npcs[_npc.key]>><<run setup.deleteNPC($npcs[_npc.key])>><<notify 5000>>Deleted _deleted.name<</notify>><<goto "TownOutput">><</link>></td>
  </tr>
  <</if>><</capture>><</for>>
  </table><</nobr>>

  <<nobr>>
  /* <<set _throwaway>><<run for (var key in $npcs) {
    if ($npcs[key].isThrowaway === true) {
      State.temporary.throwaway === true
    }
    }>><<if _throwaway !== true>><span class="tip" title="There are no more throwaway NPCs!"><h3>Throwaway NPCs</h3></span><<else>> */
    <<linkappend "<h3>Throwaway NPCs</h3>">><<button "Wipe all throwaway NPCs">>
  <<run for (let key in $npcs) {
     if ($npcs.hasOwnProperty(key)) {
       if ($npcs[key].isThrowaway === true) {
         setup.deleteNPC($npcs[key])
       }
     }
  }>>
  <<goto "TownOutput">><</button>>
  <p><table>
    <tr>
      <th>Name</th>
      <th>Race</th>
      <th>Profession</th>
      <th>Delete</th>
    </tr>
    <<for _i, _npc range $npcs>><<capture _i, _npc>><<set _profession to lib.toTitleCase(_npc.profession)>><<if _npc.isThrowaway>>
    <tr><td><<profile $npcs[_npc.key]>></td>
    <td><<print _npc.race.toUpperFirst()>></td>
    <td>_profession</td>
    <td><<link "x">><<run setup.deleteNPC($npcs[_npc.key])>><<goto "TownOutput">><</link>></td>
    </tr>
    <</if>>
    <</capture>><</for>>
    </table></p><</linkappend>><</nobr>>

<<linkappend "<h3>Racial demographics in $town.name</h3>">><div class='classTable'><<nobr>><table>
    <tr>
        <th>Race</th>
        <th>Population</th>
        <th>Percentage</th>
        /* <th>Raw Number</th> */
    </tr>
<<for _race, _percentage range $town.demographicPercentile>>
    <tr>
        <td><<print _race.toUpperFirst()>></td>
        <td><<print Math.trunc($town.population * (_percentage / 100))>></td>
        <td><<print _percentage.toFixed(2)>></td>
        /* <td><<print $town.baseDemographics[_race]>></td> */
    </tr>
<</for>>
</table><</nobr>></div><</linkappend>>

<h3>List of Buildings</h3><<nobr>>
<table>
  <tr>
    <th>Name</th>
    <th>Type</th>
    <th>Associated NPC</th>
    <th>Delete</th>
  </tr>
<<for _key, _building range $town.buildings>><<capture _key, _building>>
    \<<set _building.tooltip = "tip-" + Util.slugify(_building.name) + "-" + Math.floor(randomFloat(1).toString(16))>>
    <tr><td><span @id="_building.name"><<include "BuildingLink">></span></td>
      <td><<print lib.toTitleCase(_building.wordNoun || _building.type)>></td>
      <td><<if _building.associatedNPC>><<profile _building.associatedNPC>><</if>></td>
      <td><<link "x">><<run setup.deleteBuilding($town, _building)>><<goto "TownOutput">><</link>></td>
    </tr>
  \<</capture>><<set _previousBuilding to _building>>
<</for>>

  </table><</nobr>>

<<linkappend "<h3>Professions in $town.name</h3>">><<set _count to 0>>
<table>
  <tr>
    <th>Profession</th>
    <th>Number</th>
    <th>Percentage</th>
    <th>NPC</th>
  </tr>
  <<set $town.professions to setup.fetchProfessions($town)>>
  <<for _name, _profession range $town.professions>><<nobr>><<capture _name, _profession>><<set _count += ((_profession.population / $town.population) * 100)>><<set _article to setup.articles.output(_name)>><<set _npcs to setup.filterNpcByProfession($npcs, _name)>><<set _nameTitle to lib.toTitleCase(_name)>>
  <tr><td><<tooltip _nameTitle lib.professions[_name].description.toUpperFirst()>></td>
<td>_profession.population</td>
<td><<print ((_profession.population / $town.population) * 100).toFixed(2)>></td>
<td><<if _npcs.length === 1>>
      \<<profile _npcs[0]>>
      \<<elseif _npcs.length > 1>>
        \<<for _i, _npc range _npcs>>
          \<<profile _npc>><</for>>
      \<<else>><<link "Create _article">><<set $currentPassage to setup.createNPC($town, { profession: _name, isThrowaway: true })>><<goto $currentPassage.passageName>><</link>>
    \<</if>></td></tr><</capture>><</nobr>><</for>>
</table>Total: <<print _count.toFixed(2)>>% of the total population.
<</linkappend>>