:: NPCBuildingRelationshipsTable
<<set _buildingRelationships to lib.findBuildingRelationship($town, null, $npcs[$currentNPC.key])>><<run console.log("RELATIONSHIPS:")>><<run console.log(_buildingRelationships)>>
    <<if _buildingRelationships.length > 0>><tr>
      <th>Building Name</th>
      <th>Building Type</th>
      <<if $currentPassage.deleteEnabled>><th>Relationship</th><th>Delete</th><<else>>
      <th></th>
      <th>Relationship</th><</if>>
    </tr>
    <<for _i to 0; _i lt _buildingRelationships.length; _i++>><<set _building to lib.findBuilding($town, _buildingRelationships[_i].buildingKey)>><<capture _building>>
    <td><<building _building _building.name>></td>
    <td><<print lib.toTitleCase(_building.wordNoun)>></td>
    <<if !$currentPassage.deleteEnabled>>
      <td></td>
    <</if>>
    <td><<if _buildingRelationships[_i].description || _buildingRelationships[_i].reciprocalRelationship>>
      <<print lib.createTippyFull(
        _buildingRelationships[_i].description || 
        lib.findInArray($town.buildings, "key", _buildingRelationships[_i].buildingKey).name + " is " + lib.articles.output(_buildingRelationships[_i].reciprocalRelationship) + " to " + $npcs[_buildingRelationships[_i].npcKey].firstName, 
        lib.toTitleCase(_buildingRelationships[_i].reciprocalRelationship || _buildingRelationships[_i].relationship))>>
    <<else>>
      <<print lib.toTitleCase(_buildingRelationships[_i].reciprocalRelationship || _buildingRelationships[_i].relationship)>>
    <</if>></td>
    <<if $currentPassage.deleteEnabled>><td><td><<link "x">><<run setup.deleteBuilding($town, _building)>><<update>><</link>></td></td><</if>>
    <</capture>><</for>>
    <</if>>