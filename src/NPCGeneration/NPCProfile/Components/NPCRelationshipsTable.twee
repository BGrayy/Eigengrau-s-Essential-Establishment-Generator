:: NPCRelationshipsTable
<<nobr>>
<<if Object.keys($currentNPC.relationships).length>>
<div class='classTable'>
  <h3>Relationships</h3>
  <table>
    <tr>
      <th>Name</th>
      <th>Race</th>
      <th>Occupation</th>
      <th>Relationship</th>
    </tr>
    <<for _key, _relationship range $currentNPC.relationships>><<set _profession to lib.findProfession($town, $npcs[_key])>><<set _reciprocal to $currentNPC.firstName + " is " + lib.articles.output($npcs[_key].relationships[$currentNPC.key]) + " to " + $npcs[_key].firstName>>
    <tr>
      <td><<profile $npcs[_key]>></td>
      <td><<print $npcs[_key].race.toUpperFirst()>></td>
      <td><span id=${JSON.stringify($npcs[_key].firstName)} class=tip @title=_profession.description.toUpperFirst()><span class="dotted"><<print $npcs[_key].profession.toUpperFirst()>></span></span></td>
      <td><span id=${JSON.stringify($npcs[_key].firstName)} class=tip @title=_reciprocal><span class="dotted"><<print _relationship.toUpperFirst()>></span></span></td>
    </tr>
    <</for>>
    <tr>
      <th>Building Name</th>
      <th>Building Type</th>
      <th></th>
      <th>Relationship</th>
    </tr>
    <<set _buildingRelationships to setup.findBuildingRelationship($town, null, $npcs[$currentNPC.key])>><<run console.log("RELATIONSHIPS:")>><<run console.log(_buildingRelationships)>>
    <<for _i to 0; _i lt _buildingRelationships.length; _i++>><<set _building to lib.findInArray($town.buildings, "key", _buildingRelationships[_i].buildingKey)>><<capture _building>>
    <td><<building _building _building.name>></td>
    <td><<print lib.toTitleCase(_building.wordNoun)>></td>
    <td></td>
    <td><<print lib.toTitleCase(_buildingRelationships[_i].relationship)>></td>
    <</capture>><</for>>
  </table>
</div>
<</if>>
<</nobr>>