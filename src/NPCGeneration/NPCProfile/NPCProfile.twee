:: NPCProfile
<h1><<if $npcs[$currentPassage.key].isShallow === true || $npcs[$currentPassage.key].hasHistory === false>><<run setup.expandNPC($town, $npcs[$currentPassage.key])>><</if>><<set $currentNPC to $npcs[$currentPassage.key]>><<run console.groupCollapsed($currentNPC.name)>><<if $currentNPC.title !== "Mr" && $currentNPC.title !== "Ms">>$currentNPC.title <</if>>$currentNPC.name</h1>
\<<if def $currentNPC.key>>
    \<<button "Edit $currentNPC.name">><<run setup.history($currentNPC, "NPCProfileEdit", "Editing " + $currentNPC.name)>><<goto "NPCProfileEdit">><</button>>
\<</if>> -- 
\<<listbox "$currentNPC.outputOption">>
  <<option "JSON">>
  <<option "GMBinder">>
  <<option "LegendKeeper">>
\<</listbox>> --- 
\<<button "Output">>
  \<<switch $currentNPC.outputOption>>
  <<case "JSON">>
    <<run setup.history($currentNPC, "NPCProfileJSON", "JSON for " + $currentNPC.name)>><<goto "NPCProfileJSON">>
  <<case "GMBinder">>
    <<run setup.history($currentNPC, "NPCProfileGMBinder", "GMBinder Markdown for " + $currentNPC.name)>><<goto "NPCProfileGMBMarkdown">>
  <<case "LegendKeeper">>
    <<run setup.history($currentNPC, "NPCProfileLK", "LK Markdown for " + $currentNPC.name)>><<goto "NPCProfileLKMarkdown">>
  \<</switch>>
\<</button>>
    
\<<if $currentNPC.isThrowaway === true>> -- 
    \<<button "Save to NPCs list">><<set $npcs[$currentPassage.key].isThrowaway to false>><<run console.log("Saved " + $currentNPC.name + " to the NPCs list.")>><<notify 5000>>Saved $currentNPC.name to the NPCs list.<</notify>><<run console.log($currentNPC)>><<goto "NPCProfile">><</button>>
\<</if>>

<<if $currentNPC.title !== "Mr" && $currentNPC.title !== "Ms">><<print lib.firstCharacter($currentNPC.title)>> $currentNPC.name<<else>><<print lib.firstCharacter($currentNPC.name)>><</if>> is <<print lib.createTippyFull($currentNPC.ageYears + " years old, to be exact.", lib.articles.output($currentNPC.age))>> $currentNPC.malefemale $currentNPC.race. <<print $currentNPC.heshe.toUpperFirst()>> is <<print lib.createTippyFull(setup.metricHeight($currentNPC.heightRoll, settings.showMetric), $currentNPC.height)>> and <<print lib.createTippyFull(setup.metricWeight($currentNPC, settings.showMetric), $currentNPC.weight)>>, and has $currentNPC.eyes eyes<<if def $currentNPC.beard>> and <<print lib.articles.output($currentNPC.beard)>>,<</if>> with $currentNPC.skinColour skin. The most notable physical trait of $currentNPC.firstName is that $currentNPC.heshe has $currentNPC.physicalTrait.
<<run console.log($currentNPC)>><<set _lifestyleStandard to $currentNPC.finances.lifestyleStandard($town, $currentNPC)>>
$currentNPC.firstName $currentNPC.trait. 
\<<if def $currentNPC.vocalPattern>><<print $currentNPC.heshe.toUpperFirst()>> $currentNPC.vocalPattern. <</if>>
\When $currentNPC.heshe is relaxed, $currentNPC.heshe is $currentNPC.calmTrait. In moments of stress, $currentNPC.heshe becomes $currentNPC.stressTrait. 
\<<if $currentNPC.knownLanguages.length == 2>>$currentNPC.firstName knows $currentNPC.knownLanguages[0] and <<print $currentNPC.knownLanguages[1]>>.<</if>>

<<if $currentNPC.isBreakingGenderNorms is true && $currentNPC.roll._wageVariation > 0>>Despite sexism against $currentNPC.himher, <<elseif $currentNPC.isBreakingGenderNorms is true && $currentNPC.roll._wageVariation < 0>>Perhaps due to sexism, <</if>>$currentNPC.professionSuccess, with a background of being <<print lib.articles.output($currentNPC.background)>>. 
\<<if setup.socialClass[$currentNPC.socialClass].lifestyle.includes(_lifestyleStandard[1])>>
  \<<print $currentNPC.heshe.toUpperFirst()>> belongs to the <<print lib.createTippyFull($currentNPC.firstName + " " + _lifestyleStandard[3], $currentNPC.socialClass)>> social class
\<<else>>
  \<<print $currentNPC.heshe.toUpperFirst()>> belongs to the $currentNPC.socialClass social class, but _lifestyleStandard[3]
\<</if>>. 
\Religion-wise, $currentNPC.firstName is <<print lib.articles.output($currentNPC.religion.strength)>>. 
\$currentNPC.firstName currently has $currentNPC.pockets in $currentNPC.hisher pockets, and <<money $currentNPC.wealth>> to $currentNPC.hisher name. 
\In combat, $currentNPC.heshe uses $currentNPC.weapon. 
\<<if def $currentNPC.doesnt>>$currentNPC.doesnt<</if>>
\<<if $currentNPC.sexuality !== 'heterosexual'>>
    \<<print $currentNPC.heshe.toUpperFirst()>> is $currentNPC.sexuality
    \<<if $currentNPC.partnerID>>
        \, and has a <<print $npcs[$currentNPC.partnerID].marriageNoun>>, <<profile $npcs[$currentNPC.partnerID]>>.
    \<</if>>
  \<<elseif $currentNPC.partnerID>>$currentNPC.firstName has <<print lib.articles.output($npcs[$currentNPC.partnerID].marriageNoun)>>, <<profile $npcs[$currentNPC.partnerID]>>.
  \<</if>>

<<if def $currentNPC.note >>$currentNPC.note<</if>><<include "NPCIncomeTable">>

<<linkreplace "Early Life" t8n>><div class='npcReplace'>Early Life</div><div class='descriptive'>I was born $currentNPC.birthplace, and was raised by $currentNPC.familyUnit<<if $currentNPC.siblingNumber == 0>> as an only child.<<elseif $currentNPC.siblingNumber == 1>> with my brother.<<else>>, along with my $currentNPC.siblingNumber siblings.<</if>> I had <<print lib.articles.output($currentNPC.familyLifestyle)>> upbringing in $currentNPC.familyHome. <<if $currentNPC.knewParents is false>>I didn't know my parents growing up.<</if>><<if $currentNPC.parentalLineage>>$currentNPC.parentalLineage.<</if>> $currentNPC.childhoodMemories.</div><</linkreplace>>
<<set _becomingProfession = "Becoming " + lib.articles.output($currentNPC.profession)>><<linkreplace "_becomingProfession">><div class='npcReplace'>Becoming <<print lib.articles.output($currentNPC.profession)>></div><div class='descriptive'>"$currentNPC.backgroundOrigin $currentNPC.professionOrigin $currentNPC.bond $currentNPC.ideal"</div><</linkreplace>>
<<linkreplace "Life events" t8n>><div class='npcReplace'>Life Events</div><div class='descriptive'>Well, I certainly have a tale or two...
\<<if $currentNPC.lifeEvents.length == 2>>
    When I was younger, <<print $currentNPC.lifeEvents[0]>> Later in my life, <<print $currentNPC.lifeEvents[1]>>
  \<<elseif $currentNPC.lifeEvents.length == 1>>
     This one time $currentNPC.lifeEvents <<print ["Nothing else really would stand out", "I'm afraid that's all that would impress the likes of you", "I'm afraid that I've still got quite a ways to go in the ways of impressive tales, that's about it.", "And that's really honestly about it...", "Uh, that's really the only interesting story I have, to be honest."].random()>>
  \<<else>>
    \This one time <<print $currentNPC.lifeEvents[0]>>
    \<<for _lifeEvent range $currentNPC.lifeEvents.slice(1, -1)>>
        <<print [
          "<<print _lifeEvent.toUpperFirst()>>",
          "<<print _lifeEvent.toUpperFirst()>>",
          "How could I ever forget the time _lifeEvent ",
          "After that, _lifeEvent",
          "Not to mention there was the time _lifeEvent",
          "Oh, and I can't forget the time _lifeEvent ",
          "There was this one time, _lifeEvent ",
          "Once _lifeEvent",
          "One time _lifeEvent",
          "You might not believe it, but _lifeEvent",
          "I forget exactly when, but at one point, _lifeEvent",
          "At one point _lifeEvent",
          "I'll always remember the time _lifeEvent"
          ].random()>>
    \<</for>>
    At one point, <<print $currentNPC.lifeEvents[$currentNPC.lifeEvents.length - 1]>>
<</if>></div><</linkreplace>>

<<include "NPCRelationshipsTable">>
<<run console.groupEnd()>><<run console.log($currentNPC)>>